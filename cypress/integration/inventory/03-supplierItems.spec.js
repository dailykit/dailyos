/* eslint-disable no-undef */
/* eslint-disable spaced-comment */
/// <reference types="cypress" />

context('supplier items module | inventory app', () => {
   let newItemName = 'updated cypress item'
   let supplierName = 'delete this supplier'
   const itemSku = 'uniq-10921'

   function createBulkItem(name = 'Raw') {
      cy.get('input[type="search"]', { timeout: 4000 })
         .type(newItemName)
         .wait(500)
         .get('div.tabulator-cell')
         .then(e => e[0])
         .click()
         .get('[data-testid="add_processing"]', { timeout: 4000 })
         .click()
         .wait(2000)
         .get('input')
         .then(e => e[0])
         .type(name)
         .get(`li[title="${name}"]`, { timeout: 4000 })
         .then(e => e[0])
         .click()
         .get('button')
         .contains('Next')
         .click()
         .get('input[name="par level"]')
         .type('500', { force: true })
         .get('input[name="max inventory level"]')
         .type('5000', { force: true })
         .get('select')
         .then(e => e[0])
         .select('gm')
         .get('input[name="labor time"]')
         .type('4', { force: true })
         .get('input[name="yield"]')
         .type('89', { force: true })
         .get('input[name="shelf life"]')
         .type('10', { force: true })
         .get('select')
         .then(e => e[2])
         .select('days')
         .get('input[name="bulk density"]')
         .type('1', { force: true })
         .get('[data-testid="nutri_tunnel"]')
         .click()
         .get('input[name="cal"]')
         .type('20', { force: true })
         .get('input[name="fat"]')
         .type('12', { force: true })
         .get('input[name="saturatedFat"]')
         .type('8', { force: true })
         .get('input[name="transFat"]')
         .type('4', { force: true })
         .get('input[name="cholestrol"]')
         .type('15', { force: true })
         .get('input[name="sodium"]')
         .type('8', { force: true })
         .get('input[name="totalCarbs"]')
         .type('40', { force: true })
         .get('input[name="dietryFibre"]')
         .type('22', { force: true })
         .get('input[name="sugar"]')
         .type('18', { force: true })
         .get('input[name="protein"]')
         .type('30', { force: true })
         .get('input[name="iron"]')
         .type('12', { force: true })
         .get('button')
         .contains('Save')
         .click()
         .get('[data-testid="allergen_tunnel"]')
         .click()
         .get('input[type="checkbox"]')
         .then(e => e[0])
         .check({ force: true })
         .get('button')
         .contains('Save')
         .click()
         .get('button')
         .contains('Save')
         .click()
         .wait(3000)
         .get('h3')
         .contains(name)
         .should('be.visible')
   }

   before(() => {
      cy.visit('/apps/inventory')
         .get('h2')
         .contains('Suppliers')
         .click()
         .wait(2000)
         .get('[data-testid="addSupplier"]')
         .click()
         .get('input[name="supplierName"]')
         .should('contain.value', 'supplier')
         .then($e => {
            cy.log($e[0].value)
            supplierName = $e[0].value
         })
   })

   beforeEach(() => {
      cy.visit('/apps/inventory').get('h2').contains('Items').click().wait(4000)
   })

   it('should load items listings view', () => {
      cy.get('.tabulator-header', { timeout: 4000 }).should('be.visible')
   })

   it('should create an item and get its name', () => {
      cy.get('[data-testid="addItem"]')
         .click()
         .wait(2000)
         .get('input[name="itemName"]')
         .should('contain.value', 'item')
         .then($e => {
            cy.log($e[0].value)
            newItemName = $e[0].value
         })
   })

   it('should select a supplier for the created item', () => {
      cy.get('input[type="search"]')
         .type(newItemName)
         .wait(500)
         .get('div.tabulator-cell')
         .then(e => e[0])
         .click()
         .wait(1000)
         .get('[data-testid="add_supplier"]')
         .click()
         .wait(2000)
         .get('input')
         .then(e => e[0])
         .type(supplierName)
         .wait(100)
         .get(`li[title="${supplierName}"]`)
         .then(e => e[0])
         .click()
         .get('button')
         .contains('Save')
         .click()
   })

   it('should update basic item information', () => {
      cy.get('input[type="search"]')
         .type(newItemName)
         .wait(500)
         .get('div.tabulator-cell')
         .then(e => e[0])
         .click()
         .wait(1000)
         .get('[data-testid="basic_info"]')
         .click()
         .wait(1000)
         .get('input[name="sku"]')
         .type(itemSku)
         .get('input[name="unit quantity"]')
         .type('2')
         .get('select[name="unit"]')
         .then(e => e[0])
         .select('gm')
         .get('input[name="Unit Price"]')
         .type('2')
         .wait(200)
         .get('input[name="Lead Time"]')
         .type('2', { force: true })
         .get('button')
         .contains('Save')
         .click()
   })

   it('should add bulk item as shipped', () => {
      createBulkItem()
   })

   it('should add bulk item', () => {
      createBulkItem('Boiled')
   })

   it('should add sachets to the created bulk item as shipped', () => {
      cy.get('input[type="search"]')
         .type(newItemName)
         .wait(500)
         .get('div.tabulator-cell')
         .then(e => e[0])
         .click()
         .wait(1000)
         .get('h3')
         .contains('Raw')
         .click()
         .get('[data-testid="planned_lot_tab"]')
         .click()
         .get('[data-testid="add_sachets_button"]')
         .click()
         .wait(500)
         .get('input[name="quantity"]')
         .type('80', { force: true })
         .get('input[name="par"]')
         .type('20', { force: true })
         .get('input[name="inventory level"]')
         .type('100', { force: true })
         .get('button')
         .contains('Save')
         .click()
         .wait(2000)
         .get('h3')
         .contains('80')
         .should('be.visible')
   })
})
